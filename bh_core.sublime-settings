{
    //Debug logging
    "debug_enable": false,

    // Experimental outside adjancent bracket matching
    "bracket_outside_adjacent": true,

    // When only either the left or right bracket can be found
    // this defines if the unmatched bracket should be shown.
    "show_unmatched" : true,

    // Do the opposite of "show_unmatched" for the languages listed below
    "show_unmatched_exceptions": [],

    "content_highlight_bar": true,

    "align_content_highlight_bar": true,

    // Enable high visibility by default when sublime starts up
    // If sublime is already running and this gets changed,
    // you will not see any changes (restart requrired to see change)
    "high_visibility_enabled_by_default": false,

    // High visibilty style and color for high visibility mode
    // (solid|outline|underline|thin_underline|squiggly|stippled)
    "high_visibility_style": "outline",

    // (scope|__default__|__bracket__)
    "high_visibility_color": "__bracket__",

    // Match brackets only when the cursor is touching the inside of the bracket
    "match_only_adjacent": false,

    // Character threshold to search
    "search_threshold": 10000,

    // Ignore threshold
    "ignore_threshold": false,

    // Set mode for string escapes to ignore (regex|string)
    "bracket_string_escape_mode": "string",

    // Set max number of multi-select brackets that will be searched automatically
    "auto_selection_threshold" : 10,

    // Disable gutter icons when doing multi-select
    "no_multi_select_icons": false,

    // user_scope_brackets and user_brackets will be appended
    // to the tail of scope_brackets and brackets respectively
    // If you have custom rules that you don't want to commit to
    // the offial list, and do not need to be inserted before
    // one of the offical defintions, this is a good place to
    // put yours rules and keep in sync with the defaults.
    "user_scope_brackets": [],
    "user_brackets": [
        // TREX
        {
            "name": "trex",
            "open": "^\\s*\\b(if|subr|bytemap|enum|command|for|while|macro|do)\\b",
            "close": "\\b(e(?:if|subr|bytemap|enum|command|for|while|macro)|until)\\b",
            "style": "default",
            "scope_exclude": ["string", "comment"],
            "plugin_library": "Western Digital.trexkeywords",
            "language_filter": "whitelist",
            "language_list": ["Trex"],
            "enabled": true
        }
    ],

    // Define region highlight styles
    "bracket_styles": {
        // "default" and "unmatched" styles are special
        // styles. If they are not defined here,
        // they will be generated internally with
        // internal defaults.

        // "default" style defines attributes that
        // will be used for any style that does not
        // explicitly define that attribute.  So if
        // a style does not define a color, it will
        // use the color from the "default" style.
        "default": {
            "icon": "dot",
            // BH1's original default color for reference
            // "color": "entity.name.class",
            "color": "brackethighlighter.default",
            "style": "underline"
        },

        // This particular style is used to highlight
        // unmatched bracekt pairs.  It is a special
        // style.
        "unmatched": {
            "icon": "question",
            "color": "brackethighlighter.unmatched",
            "style": "outline"
        },
        // User defined region styles
        "curly": {
            "icon": "curly_bracket",
            "color": "brackethighlighter.curly"
            // "style": "underline"
        },
        "round": {
            "icon": "round_bracket",
            "color": "brackethighlighter.round"
            // "style": "underline"
        },
        "square": {
            "icon": "square_bracket",
            "color": "brackethighlighter.square"
            // "style": "underline"
        },
        "angle": {
            "icon": "angle_bracket",
            "color": "brackethighlighter.angle"
            // "style": "underline"
        },
        "tag": {
            "icon": "tag",
            "color": "brackethighlighter.tag",
            "style": "outline",
            "endpoints": true
        },
        "c_define": {
            "icon": "hash",
            "color": "brackethighlighter.c_define"
            // "style": "underline"
        },
        "single_quote": {
            "icon": "single_quote",
            "color": "brackethighlighter.quote"
            // "style": "underline"
        },
        "double_quote": {
            "icon": "double_quote",
            "color": "brackethighlighter.quote"
            // "style": "underline"
        },
        "regex": {
            "icon": "star",
            "color": "brackethighlighter.quote"
            // "style": "underline"
        }
    },

    /* Plugin settings */

    // Style to use for matched tags
    "tag_style": "tag",

    // Scopes to exclude from tag searches
    "tag_scope_exclude": ["string", "comment"],

    // Determine which style of tag-matching to use in which syntax
    "tag_mode": {
        "xhtml": ["XML"],
        "html": ["HTML", "HTML 5", "PHP", "HTML (Jinja Templates)", "HTML (Rails)", "HTML (Twig)", "laravel-blade", "Handlebars"],
        "cfml": ["HTML+CFML", "ColdFusion", "ColdFusionCFC"]
    }
}
